#!/usr/bin/python3
'''LockBoxes Challenge'''

def canUnlockAll(boxes):
    '''Determines if all the boxes can be opened or not.
    Args:
        boxes (list of lists): A list where each index represents a box,
                               and the value at each index is a list of keys.
    Returns:
        True if all boxes can be opened, else False.
    '''
    # Track the number of boxes and the visited status
    n = len(boxes)
    visited = [False] * n  # Initially no box is opened except for box 0
    visited[0] = True  # Box 0 is always open

    # Use a stack to simulate DFS (Depth-First Search)
    stack = [0]  # Start with the first box (index 0)

    # Traverse all accessible boxes
    while stack:
        current_box = stack.pop()

        # Get keys from the current box and explore boxes with those keys
        for key in boxes[current_box]:
            # Check if the key is valid and opens a box that has not been visited yet
            if key < n and not visited[key]:
                visited[key] = True  # Mark this box as visited
                stack.append(key)  # Add the newly unlocked box to the stack

    # Check if all boxes were visited
    return all(visited)
