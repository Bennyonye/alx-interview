#!/usr/bin/python3
def canUnlockAll(boxes):
    """
    Determines if all the boxes can be opened.
    
    Parameters:
    boxes (list of lists): A list of lists, where each sublist contains keys that can open other boxes.
    
    Returns:
    bool: True if all boxes can be opened, False otherwise.
    """
    if not boxes or len(boxes) == 0:
        return False
    
    # Number of boxes
    n = len(boxes)

    # Track visited boxes (which boxes can be opened)
    visited = [False] * n
    visited[0] = True  # The first box is already open

    # Use a stack to keep track of the boxes to visit
    stack = [0]  # Start with the first box

    while stack:
        # Take a box from the stack
        current_box = stack.pop()

        # Go through all keys in the current box
        for key in boxes[current_box]:
            # If the key is a valid box number and the box has not been visited
            if key < n and not visited[key]:
                visited[key] = True  # Mark it as visited
                stack.append(key)  # Add this box to the stack to visit

    # Check if all boxes have been visited (opened)
    return all(visited)